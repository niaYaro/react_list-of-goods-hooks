{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","reorderedGoods","goods","visibleGoods","sort","product1","product2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isOrderChanged","className","type","cn","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAzCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKd,EAASiB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QAAS,OAAO,MAIhBX,GACFI,EAAaQ,UAGRR,EAmBgBS,CAAkBnB,EAAiB,CACxDI,WAAUE,eAENc,EAAiBhB,IAAaL,EAASI,MAAQG,EAMrD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYnB,IAAaL,EAASe,WAEpCU,QAAS,kBAAMnB,EAAYN,EAASe,WALtC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYnB,IAAaL,EAASiB,SAEpCQ,QAAS,kBAAMnB,EAAYN,EAASiB,SALtC,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAA2B,IAAfjB,IAEdkB,QAAS,kBAAMjB,GAAeD,IALhC,qBAUCc,GAEC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA3CW,WACnBnB,EAAYN,EAASI,MACrBI,GAAc,IAsCR,sBAUJ,6BACGC,EAAeiB,KAAI,SAAAC,GAAO,OACzB,oBAAI,UAAQ,OAAZ,SAAoBA,aC9G9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84964417.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((product1, product2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return product1.localeCompare(product2);\n\n      case SortType.LENGTH:\n        return product1.length - product2.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const reorderedGoods = getReorderedGoods(goodsFromServer, {\n    sortType, isReversed,\n  });\n  const isOrderChanged = sortType !== SortType.NONE || isReversed;\n  const resetSorting = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isOrderChanged\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map(product => (\n          <li data-cy=\"Good\">{product}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}